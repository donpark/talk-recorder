{"version":3,"sources":["utils.js","TalkLocalService.js","TalkRemoteService.js","FramePort.js","TalkRecorder.js","recorder.js"],"names":["promiseCallback","promise","cb","then","result","catch","err","triggerEvent","eventTarget","eventName","eventDetail","dispatchEvent","CustomEvent","detail","friendlyFloat","value","oldValue","lastChar","trim","substr","floatValue","parseFloat","getChannelData","audioBuffer","channel","channelData","Float32Array","length","copyFromChannel","slice","arrayBufferFromBlob","blob","Promise","resolve","reject","reader","FileReader","readAsArrayBuffer","onload","onerror","error","decodeAudioData","audioData","sampleRate","audioCtx","AudioContext","withWorker","workerUrl","workHandler","window","Worker","WebAssembly","Error","worker","URL","host","location","createObjectURL","Blob","onmessage","msg","data","type","terminate","webkitAudioContext","getUserMedia","navigator","mediaDevices","currentScriptURL","document","currentScript","src","baseURI","getFullScriptUrl","relativeUrl","toString","console","log","TalkLocalService","constructor","record","element","options","stream","MediaRecorder","protocol","hostname","Object","assign","timeslice","getUserMediaOptions","audio","video","channelCount","autoGainControl","echoCancellation","noiseSuppression","addEventListener","e","getTracks","forEach","track","stop","once","_recordOpus","_recordMP3","reason","convert","audioBlob","inputSampleRate","inputPCM","bitRate","CHUNK_SIZE","postMessage","offset","remain","chunk","set","buffer","mediaRecorderOptions","mimeType","audioBitsPerSecond","recorder","state","blobs","ondataavailable","size","push","onstop","start","audioSettings","getAudioTracks","getSettings","_processStream","samples","processor","audioContext","sourceNode","createMediaStreamSource","processorNode","createScriptProcessor","onaudioprocess","inputBuffer","connect","destination","disconnect","TalkRemoteService","createServiceFrame","role","iframe","createElement","name","allow","width","height","style","display","border","iframePort","FramePort","EventTarget","frameOrParent","HTMLIFrameElement","target","contentWindow","origin","parent","referrer","_reqCount","_receivers","_listener","_receiveMessage","close","removeEventListener","transfers","sendRequest","request","_registerRequest","response","isRequest","sendResponse","_registerResponse","sendError","_dispatchResponse","receiver","_reqId","_resId","resId","TalkRecorder","HTMLElement","attributeChangedCallback","newValue","toLowerCase","connectedCallback","ensureInit","apply","disconnectedCallback","adoptedCallback","isSupported","service","_inited","appendChild","parentPort","customElements","define"],"mappings":"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","file":"talk-recorder.js","sourceRoot":"../src","sourcesContent":["/**\n * Turns a promise into callback.\n * \n * @param {Promise} promise \n * @param {function} cb \n */\nexport function promiseCallback(promise, cb) {\n    return promise.then(result => cb(null, result)).catch(err => cb(err, result));\n}\n\n/**\n * Helper for dispatching a custom event.\n * Default EventInit values are implicitly used, meaning events cannot be captured nor bubbled.\n * \n * @param {EventTarget} eventTarget \n * @param {string} eventName \n * @param {any} eventDetail \n */\nexport function triggerEvent(eventTarget, eventName, eventDetail = null) {\n    eventTarget.dispatchEvent(new CustomEvent(eventName, { detail: eventDetail }));\n}\n\nexport function friendlyFloat(value, oldValue) {\n    if (typeof value !== 'string') {\n        return oldValue;\n    }\n    const lastChar = value.trim().substr(-1);\n    let floatValue = parseFloat(value);\n    if (lastChar === 'k' || lastChar === 'K') {\n        floatValue *= 1000;\n    }\n    return floatValue;\n}\n\n/**\n * Get 'Transferable' raw audio samples from AudioBuffer.\n * This is a convenience function to pave over lack of ubiquitous copyFromChannel support.\n * \n * @param {AudioBuffer} audioBuffer \n * @param {number} channel \n */\nexport function getChannelData(audioBuffer, channel) {\n    let channelData;\n    if ('copyFromChannel' in audioBuffer) {\n        channelData = new Float32Array(audioBuffer.length);\n        audioBuffer.copyFromChannel(channelData, channel);\n    } else {\n        channelData = audioBuffer.getChannelData(channel).slice();\n    }\n    return channelData;\n}\n\nexport async function arrayBufferFromBlob(blob) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsArrayBuffer(blob);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = () => reject(reader.error);\n    });\n}\n\nexport async function decodeAudioData(audioData, sampleRate = 48000) {\n    // OfflineAudioContext is more appropriate here but plain AudioContext\n    // is used to avoid potential outstanding unreleased memory issue.\n    const audioCtx = new AudioContext({ sampleRate });\n    const audioBuffer = await audioCtx.decodeAudioData(audioData);\n    return getChannelData(audioBuffer, 0);\n}\n\nexport async function withWorker(workerUrl, workHandler) {\n    // Needs a Web Worker and WebAssembly supporting browser\n    if (!window.Worker || !window.WebAssembly) {\n        throw new Error('Worker and WebAssembly features not available');\n    }\n    return new Promise((resolve, reject) => {\n        let worker;\n        if (new URL(workerUrl).host === window.location.host) {\n            worker = new Worker(workerUrl);\n        } else {\n            worker = new Worker(URL.createObjectURL(new Blob([`importScripts(\"${workerUrl}\");`])));\n        }\n        worker.onmessage = (msg) => {\n            switch (msg.data.type) {\n                case 'ready':\n                    workHandler(worker);\n                    break;\n                case 'done':\n                    worker.terminate();\n                    resolve(msg.data.blob);\n                    break;\n            }\n        };\n        worker.onerror = (err) => {\n            reject(err);\n        };\n    });\n}\n","import {\n    arrayBufferFromBlob,\n    decodeAudioData,\n    getChannelData,\n    triggerEvent,\n    withWorker\n} from \"./utils\";\n\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\nconst getUserMedia = navigator.mediaDevices ? navigator.mediaDevices.getUserMedia : navigator.getUserMedia;\n\n// HACK: Used to determine full worker URL using script tag's src attribute if available.\nconst currentScriptURL = document.currentScript ? new URL(document.currentScript.src, document.baseURI) : null;\nfunction getFullScriptUrl(relativeUrl) {\n    return currentScriptURL ? new URL(relativeUrl, currentScriptURL).toString() : relativeUrl;\n}\nconst workerUrl = getFullScriptUrl(\"./lamemp3/worker.js\");\nconsole.log('workerUrl', workerUrl);\n\nexport class TalkLocalService {\n    constructor() {\n    }\n\n    async record(element, options) {\n        if (element.stream) {\n            throw new Error('already recording');\n        }\n        if (!window.MediaRecorder || !window.Worker || !window.WebAssembly) {\n            throw new Error('Current browser is not supported by talk-recorder');\n        }\n        if (!getUserMedia && !element.host && window.location.protocol !== 'https:' && window.location.hostname !== 'localhost') {\n            throw new Error('HTTPS is required for media recording.');\n        }\n\n        options = Object.assign({\n            type: 'opus',\n            timeslice: 20,\n            workerUrl,\n        }, options)\n\n        // Use optional 'getUserMedia' field of recording call options to override.\n        const getUserMediaOptions = Object.assign({}, {\n            audio: true,\n            video: false,\n            channelCount: 1,\n            autoGainControl: true,\n            echoCancellation: true,\n            noiseSuppression: true\n        }, options.getUserMedia);\n\n        // start capturing audio\n        element.stream = await navigator.mediaDevices.getUserMedia(getUserMediaOptions);\n\n        triggerEvent(element, 'record', { stream: element.stream });\n\n        element.addEventListener('stop', e => {\n            element.stream.getTracks().forEach(track => track.stop());\n            element.stream = null;\n        }, { once: true });\n\n        try {\n            let blob;\n            if (options.type === 'opus') {\n                blob = await this._recordOpus(element, element.stream, options);\n            } else if (options.type === 'mp3') {\n                blob = await this._recordMP3(element, element.stream, options);\n            }\n            triggerEvent(element, 'recorded', { blob });\n            return blob;\n        } catch (err) {\n            triggerEvent(element, 'error', { error: err });\n            throw err;\n        }\n    }\n\n    stop(element, reason) {\n        triggerEvent(element, 'stop', { reason });\n    }\n\n    async convert(element, audioBlob, options = {}) {\n        triggerEvent(element, 'convert');\n\n        options = Object.assign({}, {\n            sampleRate: 48000,\n            type: 'mp3',\n            workerUrl,\n        }, options);\n\n        // decode audio samples using 48000 as default input sample rate.\n        const inputSampleRate = options.sampleRate || 48000;\n        const audioData = await arrayBufferFromBlob(audioBlob);\n        const inputPCM = await decodeAudioData(audioData, inputSampleRate);\n        const bitRate = element.bitRate || 64 * 1000; // MP3-specific default bitRate\n\n        // Until direct to MP3 encoder implemented, record as Opus first then convert as a whole.\n        return withWorker(options.workerUrl, (worker) => {\n            const CHUNK_SIZE = 8192;\n            worker.postMessage({\n                type: 'init',\n                sampleRate: inputSampleRate,\n                bitRate\n            });\n\n            // send to worker in chunks\n            let offset = 0;\n            let remain = inputPCM.length;\n            while (remain > 0) {\n                const length = remain > CHUNK_SIZE ? CHUNK_SIZE : remain;\n\n                // slice out a chunk into its own ArrayBuffer\n                const chunk = new Float32Array(length);\n                chunk.set(inputPCM.slice(offset, offset + length), 0);\n                offset += length;\n                remain -= length;\n\n                worker.postMessage({\n                    type: 'data',\n                    data: chunk.buffer,\n                }, [chunk.buffer]);\n            }\n\n            // signal end of data\n            worker.postMessage({\n                type: 'flush',\n            });\n        }).then(blob => {\n            triggerEvent(element, 'converted', { blob });\n            return blob;\n        }).catch(err => {\n            triggerEvent(element, 'error', { error: err });\n            throw err;\n        })\n    }\n\n    async _recordOpus(element, stream, options) {\n        const bitRate = element.bitRate || (32 * 1000); // Uses 32k as default bitrate for Opus podcast\n\n        // Use optional 'MediaRecorder' field of recording call options to override.\n        const mediaRecorderOptions = Object.assign({}, {\n            mimeType: 'audio/webm; codecs=\"opus\"',\n            audioBitsPerSecond: bitRate,\n        }, options.MediaRecorder);\n\n        // MediaRecorder instance had issues when reused.\n        // So each recording session creates a new instance internally.\n        const recorder = new MediaRecorder(stream, mediaRecorderOptions);\n\n        // Stop event is used to stop recording.\n        element.addEventListener('stop', ({ detail: { reason } }) => {\n            if (!recorder || recorder.state !== 'recording') {\n                return;\n            }\n            recorder.stop()\n        }, { once: true });\n\n        // Time-sliced blobs from MediaRecorders are not guaranteed to honor logical boundaries.\n        // So blobs are merged to form a proper opus packets in webm container is returned when stopped.\n        // Override optional 'timeslice' recording option to change timeslice duration (default 20ms).\n        // Note that resulting audio file's duration field is not set correctly on Chrome.\n        return new Promise((resolve, reject) => {\n            const blobs = [];\n            recorder.ondataavailable = e => {\n                if (typeof e.data !== \"undefined\" && e.data.size > 0) {\n                    blobs.push(e.data);\n                }\n            };\n            recorder.onstop = e => {\n                if (blobs.length > 0) {\n                    resolve(new Blob(blobs, { type: blobs[0].type }))\n                } else {\n                    resolve(null);\n                }\n            };\n            recorder.onerror = e => {\n                reject(e.error);\n            }\n            recorder.start(options.timeslice);\n        })\n    }\n\n    async _recordMP3(element, stream, options) {\n        const audioSettings = stream.getAudioTracks()[0].getSettings();\n        const sampleRate = audioSettings.sampleRate || 48000;\n        return withWorker(options.workerUrl, (worker) => {\n            const bitRate = element.bitRate || (64 * 1024); // MP3-specific default bitrate for podcasting\n            worker.postMessage({\n                type: 'init',\n                sampleRate,\n                bitRate\n            });\n\n            this._processStream(element, stream, (samples) => {\n                worker.postMessage({\n                    type: 'data',\n                    data: samples.buffer,\n                }, [samples.buffer]);\n            })\n\n            element.addEventListener(\"stop\", e => {\n                // signal end of data\n                worker.postMessage({\n                    type: 'flush',\n                });\n            })\n        })\n    }\n\n    async _processStream(element, stream, processor) {\n        const audioContext = new AudioContext()\n\n        const sourceNode = audioContext.createMediaStreamSource(stream);\n\n        const processorNode = audioContext.createScriptProcessor(0, 1, 1);\n        processorNode.onaudioprocess = (e) => processor(getChannelData(e.inputBuffer, 0))\n\n        sourceNode.connect(processorNode);\n        processorNode.connect(audioContext.destination);\n\n        element.addEventListener(\"stop\", e => {\n            sourceNode.disconnect();\n        })\n    }\n}\n","import { triggerEvent } from \"./utils\";\n\nexport class TalkRemoteService {\n    constructor() {\n    }\n\n    createServiceFrame(element) {\n        const { host, role } = element;\n        const iframe = document.createElement('iframe');\n        iframe.src = host;\n        iframe.name = \"talk-service\";\n        iframe.allow = \"microphone; autoplay\";\n        if (role === 'framer') {\n            iframe.width = 0;\n            iframe.height = 0;\n            iframe.style.display = 'none';\n        } else {\n            iframe.width = 500;\n            iframe.height = 500;\n            iframe.style.border = 'none';\n        }\n        return iframe;\n    }\n\n    async record(element, options) {\n        if (!element.iframePort) {\n            throw new Error('service frame to host failed to open');\n        }\n        return new Promise((resolve, reject) => {\n            element.iframePort.addEventListener('recorded', e => {\n                const msg = e.detail;\n                triggerEvent(element, msg.type, msg)\n                resolve(msg.blob);\n            }, { once: true });\n            element.iframePort.addEventListener('error', e => {\n                const msg = e.detail;\n                triggerEvent(element, msg.type, msg)\n                reject(msg.error)\n            }, { once: true });\n            element.iframePort.postMessage({\n                type: 'record',\n                options,\n            })\n            triggerEvent(element, 'record', {});\n        })\n    }\n\n    stop(element, reason) {\n        triggerEvent(element, 'stop', { reason });\n\n        if (element.iframePort) {\n            element.iframePort.postMessage({ type: 'stop' });\n        }\n    }\n\n    async convert(element, audioBlob, options = {}) {\n        if (!element.iframePort) {\n            throw new Error('service frame to host failed to open');\n        }\n\n        return new Promise((resolve, reject) => {\n            element.iframePort.addEventListener('converted', e => {\n                const msg = e.detail;\n                triggerEvent(element, msg.type, msg)\n                resolve(msg.blob);\n            }, { once: true });\n            element.iframePort.addEventListener('error', e => {\n                const msg = e.detail;\n                triggerEvent(element, msg.type, msg)\n                reject(msg.error)\n            }, { once: true });\n            element.iframePort.postMessage({\n                type: 'convert',\n                blob: audioBlob,\n                options,\n            })\n            triggerEvent(element, 'convert', {});\n        })\n    }\n}\n","/**\n * Create port to an iframe element:\n * \n *      const iframePort = new FramePort(iframeEl);\n * \n * Create port to parent window:\n * \n *      const parentPort = new FramePort(window.parent);\n * \n * Post a message:\n * \n *      port.postMessage(msg, [transferables]);\n * \n * Wait for a specific message type:\n * \n *      port.addEventListener('recorded', msg => console.log('recorded blob', msg.blob));\n * \n * Send a request and wait for response:\n * \n *      const response = await port.sendRequest(request, [transferables]);\n * \n * Send a message in response to a request:\n * \n *      if (port.isRequest(msg)) port.sendResponse(msg, response);\n * \n * Send error in response to a request:\n * \n *      if (port.isRequest(msg) && error) port.sendError(msg, error);\n * \n */\nexport class FramePort extends EventTarget {\n\n    constructor(frameOrParent) {\n        super();\n\n        if (!frameOrParent) throw new Error('null FramePort constructor argument');\n        if (frameOrParent instanceof HTMLIFrameElement) {\n            if (!frameOrParent.src) throw new Error('null iframe.src');\n            this.target = frameOrParent.contentWindow;\n            this.origin = new URL(frameOrParent.src).origin;\n        } else {\n            if (frameOrParent !== parent) throw new Error(\"wrong parent\");\n            if (frameOrParent === window) throw new Error(\"not framed\");\n            this.target = frameOrParent;\n            this.origin = new URL(document.referrer).origin;\n        }\n\n        this._reqCount = 0;\n        this._receivers = {};\n\n        this._listener = e => e.origin === this.origin && this._receiveMessage(e);\n        window.addEventListener('message', this._listener);\n    }\n\n    close() {\n        window.removeEventListener(\"message\", this._listener);\n        this.target = null;\n        this._receivers = {};\n        this._listener = null;\n    }\n\n    postMessage(msg, transfers) {\n        if (!msg) throw new Error('null msg');\n        this.target.postMessage(msg, this.origin, transfers);\n    }\n\n    sendRequest(request, transfers) {\n        return new Promise((resolve, reject) => {\n            this._registerRequest(request, (response) => response.type !== 'error' ? resolve(response) : reject(response.error));\n            this.postMessage(request, transfers);\n        });\n    }\n\n    isRequest(msg) {\n        return '_reqId' in msg;\n    }\n\n    sendResponse(request, response, transfers) {\n        this._registerResponse(request, response);\n        this.postMessage(response, transfers);\n    }\n\n    sendError(request, error) {\n        this.sendResponse(request, { type: 'error', error });\n    }\n\n    _receiveMessage(e) {\n        const msg = e.data;\n        if (!this._dispatchResponse(msg)) {\n            this.dispatchEvent(new CustomEvent(msg.type, { detail: msg }));\n        }\n    }\n\n    _registerRequest(msg, receiver) {\n        msg._reqId = ++this._reqCount;\n        this._receivers[msg._reqId] = receiver;\n    }\n\n    _registerResponse(request, response) {\n        response._resId = request._reqId;\n    }\n\n    _dispatchResponse(msg) {\n        const resId = msg._resId;\n        if (!resId || !this._receivers[resId]) {\n            return false;\n        }\n        this._receivers[resId](msg);\n        delete this._receivers[resId];\n        return true;\n    }\n}\n","import { TalkLocalService } from \"./TalkLocalService\";\nimport { TalkRemoteService } from \"./TalkRemoteService\"\nimport { FramePort } from \"./FramePort\";\nimport { friendlyFloat } from \"./utils\";\n\nexport class TalkRecorder extends HTMLElement {\n    // Lowercased names of modifiable attributes to receive attributeChangedCallback on.\n    static observedAttributes = [\"bitrate\", \"host\", \"role\"];\n\n    constructor() {\n        super();\n    }\n\n    // Callback used to notify when an attribute in `observedAttributes` list changes value.\n    // Also called before connectedCallback with each attribute's initial value.\n    // Attributes covered include custom as well as built-in attributes, like style.\n    // NOTE: attribute name will be in lowercase as specfied in the HTML spec.\n    attributeChangedCallback(name, oldValue, newValue) {\n        switch (name) {\n            case 'bitrate':\n                this.bitRate = friendlyFloat(newValue, oldValue);\n                break;\n            case 'host':\n                this.host = newValue;\n                break;\n            case 'role':\n                console.log('role', { oldValue, newValue });\n                if (typeof newValue === 'string') {\n                    this.role = newValue.trim().toLowerCase();\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    // Callback to notify custom element has been inserted into document.\n    connectedCallback() {\n        ensureInit.apply(this);\n    }\n\n    // Callback to notify custom element has been removed from document.\n    disconnectedCallback() {\n    }\n\n    // Callback to notify custom element's parentNode changes\n    adoptedCallback() {\n    }\n\n    isSupported() {\n        return (\n            navigator.mediaDevices && navigator.mediaDevices.getUserMedia &&\n            window.MediaRecorder &&\n            window.Worker &&\n            window.WebAssembly\n        );\n    }\n\n    async record(options = {}) {\n        ensureInit.apply(this);\n\n        options = Object.assign({}, {\n            type: 'opus',\n        }, options);\n\n        if (options.type !== 'opus' && options.type !== 'mp3') {\n            throw new Error('unknown recording type');\n        }\n\n        return this.service.record(this, options);\n    }\n\n    async stop(reason = 'finish') {\n        if (this.service) {\n            return this.service.stop(this, reason);\n        }\n    }\n\n    async convert(audioBlob, options = {}) {\n        ensureInit.apply(this);\n        return this.service.convert(this, audioBlob, options);\n    }\n}\n\n// On-demand initialization allows class to be used without inserted.\nfunction ensureInit() {\n    if (this._inited) {\n        return;\n    }\n    this._inited = true;\n    if (this.host) {\n        this.service = new TalkRemoteService();\n        this.iframe = this.service.createServiceFrame(this);\n        this.appendChild(this.iframe);\n        this.iframePort = new FramePort(this.iframe);\n    } else {\n        this.service = new TalkLocalService();\n\n        if (this.role === 'framed' && parent !== window) {\n            this.parentPort = new FramePort(parent);\n            this.parentPort.addEventListener('record', e => {\n                const msg = e.detail;\n                this.record(msg.options)\n            });\n            this.parentPort.addEventListener('stop', e => {\n                const msg = e.detail;\n                this.stop(msg.reason);\n            });\n            this.parentPort.addEventListener('convert', e => {\n                const msg = e.detail;\n                this.convert(msg.blob, msg.options);\n            });\n            this.addEventListener('recorded', e => {\n                const { blob } = e.detail;\n                this.parentPort.postMessage({ type: 'recorded', blob })\n            })\n            this.addEventListener('converted', e => {\n                const { blob } = e.detail;\n                this.parentPort.postMessage({ type: 'converted', blob });\n            })\n        }\n    }\n}\n","export * from \"./TalkRecorder\";\nimport { TalkRecorder } from \"./TalkRecorder\";\n\nif (typeof window !== 'undefined') {\n    window.TalkRecorder = TalkRecorder;\n    if ('customElements' in window) {\n        customElements.define(\"talk-recorder\", TalkRecorder);\n    }\n}\n"]}