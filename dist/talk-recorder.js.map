{"version":3,"sources":["../node_modules/regenerator-runtime/runtime.js","utils.js","TalkLocalService.js","TalkRemoteService.js","TalkRecorder.js","recorder.js"],"names":["promiseCallback","promise","cb","then","result","catch","err","triggerEvent","eventTarget","eventName","eventDetail","dispatchEvent","CustomEvent","detail","friendlyFloat","value","oldValue","lastChar","trim","substr","floatValue","parseFloat","getChannelData","audioBuffer","channel","channelData","Float32Array","length","copyFromChannel","slice","arrayBufferFromBlob","blob","Promise","resolve","reject","reader","FileReader","readAsArrayBuffer","onload","onerror","error","decodeAudioData","audioData","sampleRate","audioCtx","AudioContext","withWorker","workerUrl","workHandler","window","Worker","WebAssembly","Error","worker","URL","host","location","createObjectURL","Blob","onmessage","msg","data","type","terminate","webkitAudioContext","getUserMedia","navigator","mediaDevices","document","currentScript","src","console","log","currentScriptSrc","scriptUrl","baseURI","toString","scriptBaseUrl","lastIndexOf","TalkLocalService","element","options","stream","MediaRecorder","protocol","hostname","Object","assign","timeslice","getUserMediaOptions","audio","video","channelCount","autoGainControl","echoCancellation","noiseSuppression","addEventListener","e","getTracks","forEach","track","stop","once","_recordOpus","_recordMP3","reason","audioBlob","inputSampleRate","inputPCM","bitRate","CHUNK_SIZE","postMessage","offset","remain","chunk","set","buffer","mediaRecorderOptions","mimeType","audioBitsPerSecond","recorder","state","blobs","ondataavailable","size","push","onstop","start","audioSettings","getAudioTracks","getSettings","_processStream","samples","processor","audioContext","sourceNode","createMediaStreamSource","processorNode","createScriptProcessor","onaudioprocess","inputBuffer","connect","destination","disconnect","TalkRemoteService","role","iframe","createElement","name","allow","width","height","style","display","border","cleanup","receiveMessageFromFrame","sendMessageToFrame","referrerOrigin","referrer","url","replyToMessage","reply","source","origin","frame","frameURL","frameOrigin","contentWindow","receiver","listener","removeEventListener","TalkRecorder","newValue","toLowerCase","service","createServiceFrame","appendChild","iframerOrigin","receiveMessageFromParent","record","parent","convert","HTMLElement","customElements","define"],"mappingsztBA;;;;;;AAMO,SAASA,eAAT,CAAyBC,OAAzB,EAAkCC,EAAlC,EAAsC;AACzC,SAAOD,OAAO,CAACE,IAAR,CAAa,UAAAC,MAAM;AAAA,WAAIF,EAAE,CAAC,IAAD,EAAOE,MAAP,CAAN;AAAA,GAAnB,EAAyCC,KAAzC,CAA+C,UAAAC,GAAG;AAAA,WAAIJ,EAAE,CAACI,GAAD,EAAMF,MAAN,CAAN;AAAA,GAAlD,CAAP;AACH;AAED;;;;;;;;;;AAQO,SAASG,YAAT,CAAsBC,WAAtB,EAAmCC,SAAnC,EAAkE;AAAA,MAApBC,WAAoB,uEAAN,IAAM;AACrEF,EAAAA,WAAW,CAACG,aAAZ,CAA0B,IAAIC,WAAJ,CAAgBH,SAAhB,EAA2B;AAAEI,IAAAA,MAAM,EAAEH;AAAV,GAA3B,CAA1B;AACH;;AAEM,SAASI,aAAT,CAAuBC,KAAvB,EAA8BC,QAA9B,EAAwC;AAC3C,MAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;AAC3B,WAAOC,QAAP;AACH;;AACD,MAAMC,QAAQ,GAAGF,KAAK,CAACG,IAAN,GAAaC,MAAb,CAAoB,CAAC,CAArB,CAAjB;AACA,MAAIC,UAAU,GAAGC,UAAU,CAACN,KAAD,CAA3B;;AACA,MAAIE,QAAQ,KAAK,GAAb,IAAoBA,QAAQ,KAAK,GAArC,EAA0C;AACtCG,IAAAA,UAAU,IAAI,IAAd;AACH;;AACD,SAAOA,UAAP;AACH;AAED;;;;;;;;;AAOO,SAASE,cAAT,CAAwBC,WAAxB,EAAqCC,OAArC,EAA8C;AACjD,MAAIC,WAAJ;;AACA,MAAI,qBAAqBF,WAAzB,EAAsC;AAClCE,IAAAA,WAAW,GAAG,IAAIC,YAAJ,CAAiBH,WAAW,CAACI,MAA7B,CAAd;AACAJ,IAAAA,WAAW,CAACK,eAAZ,CAA4BH,WAA5B,EAAyCD,OAAzC;AACH,GAHD,MAGO;AACHC,IAAAA,WAAW,GAAGF,WAAW,CAACD,cAAZ,CAA2BE,OAA3B,EAAoCK,KAApC,EAAd;AACH;;AACD,SAAOJ,WAAP;AACH;;SAEqBK;;;;;iFAAf,iBAAmCC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,6CACI,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kBAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,cAAAA,MAAM,CAACE,iBAAP,CAAyBN,IAAzB;;AACAI,cAAAA,MAAM,CAACG,MAAP,GAAgB;AAAA,uBAAML,OAAO,CAACE,MAAM,CAAC/B,MAAR,CAAb;AAAA,eAAhB;;AACA+B,cAAAA,MAAM,CAACI,OAAP,GAAiB;AAAA,uBAAML,MAAM,CAACC,MAAM,CAACK,KAAR,CAAZ;AAAA,eAAjB;AACH,aALM,CADJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SASeC;;;;;6EAAf,kBAA+BC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0CC,YAAAA,UAA1C,8DAAuD,KAAvD;AACH;AACA;AACMC,YAAAA,QAHH,GAGc,IAAIC,YAAJ,CAAiB;AAAEF,cAAAA,UAAU,EAAVA;AAAF,aAAjB,CAHd;AAAA;AAAA,mBAIuBC,QAAQ,CAACH,eAAT,CAAyBC,SAAzB,CAJvB;;AAAA;AAIGnB,YAAAA,WAJH;AAAA,8CAKID,cAAc,CAACC,WAAD,EAAc,CAAd,CALlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SAQeuB;;;;;wEAAf,kBAA0BC,SAA1B,EAAqCC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEC,CAACC,MAAM,CAACC,MAAR,IAAkB,CAACD,MAAM,CAACE,WAF3B;AAAA;AAAA;AAAA;;AAAA,kBAGO,IAAIC,KAAJ,CAAU,+CAAV,CAHP;;AAAA;AAAA,8CAKI,IAAIpB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kBAAImB,MAAJ;;AACA,kBAAI,IAAIC,GAAJ,CAAQP,SAAR,EAAmBQ,IAAnB,KAA4BN,MAAM,CAACO,QAAP,CAAgBD,IAAhD,EAAsD;AAClDF,gBAAAA,MAAM,GAAG,IAAIH,MAAJ,CAAWH,SAAX,CAAT;AACH,eAFD,MAEO;AACHM,gBAAAA,MAAM,GAAG,IAAIH,MAAJ,CAAWI,GAAG,CAACG,eAAJ,CAAoB,IAAIC,IAAJ,CAAS,2BAAmBX,SAAnB,UAAT,CAApB,CAAX,CAAT;AACH;;AACDM,cAAAA,MAAM,CAACM,SAAP,GAAmB,UAACC,GAAD,EAAS;AACxB,wBAAQA,GAAG,CAACC,IAAJ,CAASC,IAAjB;AACI,uBAAK,OAAL;AACId,oBAAAA,WAAW,CAACK,MAAD,CAAX;AACA;;AACJ,uBAAK,MAAL;AACIA,oBAAAA,MAAM,CAACU,SAAP;AACA9B,oBAAAA,OAAO,CAAC2B,GAAG,CAACC,IAAJ,CAAS9B,IAAV,CAAP;AACA;AAPR;AASH,eAVD;;AAWAsB,cAAAA,MAAM,CAACd,OAAP,GAAiB,UAACjC,GAAD,EAAS;AACtB4B,gBAAAA,MAAM,CAAC5B,GAAD,CAAN;AACH,eAFD;AAGH,aArBM,CALJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;ACrEP;;;;;;;;;;;;AAQA,IAAMuC,YAAY,GAAGI,MAAM,CAACJ,YAAP,IAAuBI,MAAM,CAACe,kBAAnD;AACA,IAAMC,YAAY,GAAGC,SAAS,CAACC,YAAV,GAAyBD,SAAS,CAACC,YAAV,CAAuBF,YAAhD,GAA+DC,SAAS,CAACD,YAA9F,EAEA;;AACA,IAAIlB,SAAS,GAAG,qBAAhB;;AACA,IAAIqB,QAAQ,CAACC,aAAT,IAA0BD,QAAQ,CAACC,aAAT,CAAuBC,GAArD,EAA0D;AACtDC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC;AAC/BH,IAAAA,aAAa,EAAED,QAAQ,CAACC,aADO;AAE/BI,IAAAA,gBAAgB,EAAEL,QAAQ,CAACC,aAAT,CAAuBC;AAFV,GAAnC;AAIA,MAAMI,SAAS,GAAG,IAAIpB,GAAJ,CAAQc,QAAQ,CAACC,aAAT,CAAuBC,GAA/B,EAAoCF,QAAQ,CAACO,OAA7C,EAAsDC,QAAtD,EAAlB;AACA,MAAMC,aAAa,GAAGH,SAAS,CAACvD,MAAV,CAAiB,CAAjB,EAAoBuD,SAAS,CAACI,WAAV,CAAsB,GAAtB,CAApB,CAAtB;AACA/B,EAAAA,SAAS,aAAM8B,aAAN,uBAAT;AACH;;IAEYE;AACT,8BAAc;AAAA;AACb;;;;;6FAEYC,SAASC;;;;;;qBACdD,OAAO,CAACE;;;;;sBACF,IAAI9B,KAAJ,CAAU,mBAAV;;;sBAEN,CAACH,MAAM,CAACkC,aAAR,IAAyB,CAAClC,MAAM,CAACC,MAAjC,IAA2C,CAACD,MAAM,CAACE;;;;;sBAC7C,IAAIC,KAAJ,CAAU,mDAAV;;;sBAEN,CAACa,YAAD,IAAiB,CAACe,OAAO,CAACzB,IAA1B,IAAkCN,MAAM,CAACO,QAAP,CAAgB4B,QAAhB,KAA6B,QAA/D,IAA2EnC,MAAM,CAACO,QAAP,CAAgB6B,QAAhB,KAA6B;;;;;sBAClG,IAAIjC,KAAJ,CAAU,wCAAV;;;AAGV6B,gBAAAA,OAAO,GAAGK,MAAM,CAACC,MAAP,CAAc;AACpBzB,kBAAAA,IAAI,EAAE,MADc;AAEpB0B,kBAAAA,SAAS,EAAE,EAFS;AAGpBzC,kBAAAA,SAAS,EAATA;AAHoB,iBAAd,EAIPkC,OAJO,CAAV,EAMA;;AACMQ,gBAAAA,sBAAsBH,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAC1CG,kBAAAA,KAAK,EAAE,IADmC;AAE1CC,kBAAAA,KAAK,EAAE,KAFmC;AAG1CC,kBAAAA,YAAY,EAAE,CAH4B;AAI1CC,kBAAAA,eAAe,EAAE,IAJyB;AAK1CC,kBAAAA,gBAAgB,EAAE,IALwB;AAM1CC,kBAAAA,gBAAgB,EAAE;AANwB,iBAAlB,EAOzBd,OAAO,CAAChB,YAPiB,GAS5B;;;uBACuBC,SAAS,CAACC,YAAV,CAAuBF,YAAvB,CAAoCwB,mBAApC;;;AAAvBT,gBAAAA,OAAO,CAACE;AAER,yCAAaF,OAAb,EAAsB,QAAtB,EAAgC;AAAEE,kBAAAA,MAAM,EAAEF,OAAO,CAACE;AAAlB,iBAAhC;AAEAF,gBAAAA,OAAO,CAACgB,gBAAR,CAAyB,MAAzB,EAAiC,UAAAC,CAAC,EAAI;AAClCjB,kBAAAA,OAAO,CAACE,MAAR,CAAegB,SAAf,GAA2BC,OAA3B,CAAmC,UAAAC,KAAK;AAAA,2BAAIA,KAAK,CAACC,IAAN,EAAJ;AAAA,mBAAxC;AACArB,kBAAAA,OAAO,CAACE,MAAR,GAAiB,IAAjB;AACH,iBAHD,EAGG;AAAEoB,kBAAAA,IAAI,EAAE;AAAR,iBAHH;;;sBAOQrB,OAAO,CAACnB,IAAR,KAAiB;;;;;;uBACJ,KAAKyC,WAAL,CAAiBvB,OAAjB,EAA0BA,OAAO,CAACE,MAAlC,EAA0CD,OAA1C;;;AAAblD,gBAAAA;;;;;sBACOkD,OAAO,CAACnB,IAAR,KAAiB;;;;;;uBACX,KAAK0C,UAAL,CAAgBxB,OAAhB,EAAyBA,OAAO,CAACE,MAAjC,EAAyCD,OAAzC;;;AAAblD,gBAAAA;;;AAEJ,yCAAaiD,OAAb,EAAsB,UAAtB,EAAkC;AAAEjD,kBAAAA,IAAI,EAAJA;AAAF,iBAAlC;iDACOA;;;;;AAEP,yCAAaiD,OAAb,EAAsB,OAAtB,EAA+B;AAAExC,kBAAAA,KAAK;AAAP,iBAA/B;;;;;;;;;;;;;;;;;;;yBAKHwC,SAASyB,QAAQ;AAClB,+BAAazB,OAAb,EAAsB,MAAtB,EAA8B;AAAEyB,QAAAA,MAAM,EAANA;AAAF,OAA9B;AACH;;;;+FAEazB,SAAS0B;;;;;;;;;;;AAAWzB,gBAAAA,qEAAU;AACxC,yCAAaD,OAAb,EAAsB,SAAtB;AAEAC,gBAAAA,OAAO,GAAGK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AACxB5C,kBAAAA,UAAU,EAAE,KADY;AAExBmB,kBAAAA,IAAI,EAAE,KAFkB;AAGxBf,kBAAAA,SAAS,EAATA;AAHwB,iBAAlB,EAIPkC,OAJO,CAAV,EAMA;;AACM0B,gBAAAA,kBAAkB1B,OAAO,CAACtC,UAAR,IAAsB;;uBACtB,gCAAoB+D,SAApB;;;AAAlBhE,gBAAAA;;uBACiB,4BAAgBA,SAAhB,EAA2BiE,eAA3B;;;AAAjBC,gBAAAA;AACAC,gBAAAA,UAAU7B,OAAO,CAAC6B,OAAR,IAAmB,KAAK,MAAM;AAE9C;;kDACO,uBAAW5B,OAAO,CAAClC,SAAnB,EAA8B,UAACM,MAAD,EAAY;AAC7C,sBAAMyD,UAAU,GAAG,IAAnB;AACAzD,kBAAAA,MAAM,CAAC0D,WAAP,CAAmB;AACfjD,oBAAAA,IAAI,EAAE,MADS;AAEfnB,oBAAAA,UAAU,EAAEgE,eAFG;AAGfE,oBAAAA,OAAO,EAAPA;AAHe,mBAAnB,EAF6C,CAQ7C;;AACA,sBAAIG,MAAM,GAAG,CAAb;AACA,sBAAIC,MAAM,GAAGL,QAAQ,CAACjF,MAAtB;;AACA,yBAAOsF,MAAM,GAAG,CAAhB,EAAmB;AACf,wBAAMtF,MAAM,GAAGsF,MAAM,GAAGH,UAAT,GAAsBA,UAAtB,GAAmCG,MAAlD,CADe,CAGf;;AACA,wBAAMC,KAAK,GAAG,IAAIxF,YAAJ,CAAiBC,MAAjB,CAAd;AACAuF,oBAAAA,KAAK,CAACC,GAAN,CAAUP,QAAQ,CAAC/E,KAAT,CAAemF,MAAf,EAAuBA,MAAM,GAAGrF,MAAhC,CAAV,EAAmD,CAAnD;AACAqF,oBAAAA,MAAM,IAAIrF,MAAV;AACAsF,oBAAAA,MAAM,IAAItF,MAAV;AAEA0B,oBAAAA,MAAM,CAAC0D,WAAP,CAAmB;AACfjD,sBAAAA,IAAI,EAAE,MADS;AAEfD,sBAAAA,IAAI,EAAEqD,KAAK,CAACE;AAFG,qBAAnB,EAGG,CAACF,KAAK,CAACE,MAAP,CAHH;AAIH,mBAxB4C,CA0B7C;;;AACA/D,kBAAAA,MAAM,CAAC0D,WAAP,CAAmB;AACfjD,oBAAAA,IAAI,EAAE;AADS,mBAAnB;AAGH,iBA9BM,EA8BJ3D,IA9BI,CA8BC,UAAA4B,IAAI,EAAI;AACZ,2CAAaiD,OAAb,EAAsB,WAAtB,EAAmC;AAAEjD,oBAAAA,IAAI,EAAJA;AAAF,mBAAnC;AACA,yBAAOA,IAAP;AACH,iBAjCM,EAiCJ1B,KAjCI,CAiCE,UAAAC,GAAG,EAAI;AACZ,2CAAa0E,OAAb,EAAsB,OAAtB,EAA+B;AAAExC,oBAAAA,KAAK,EAAElC;AAAT,mBAA/B;AACA,wBAAMA,GAAN;AACH,iBApCM;;;;;;;;;;;;;;;;;;;mGAuCO0E,SAASE,QAAQD;;;;;;AACzB4B,gBAAAA,UAAU7B,OAAO,CAAC6B,OAAR,IAAoB,KAAK,MAAO;AAEhD;;AACMQ,gBAAAA,uBAAuB/B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAC3C+B,kBAAAA,QAAQ,EAAE,2BADiC;AAE3CC,kBAAAA,kBAAkB,EAAEV;AAFuB,iBAAlB,EAG1B5B,OAAO,CAACE,aAHkB,GAK7B;AACA;;AACMqC,gBAAAA,WAAW,IAAIrC,aAAJ,CAAkBD,MAAlB,EAA0BmC,oBAA1B,GAEjB;;AACArC,gBAAAA,OAAO,CAACgB,gBAAR,CAAyB,MAAzB,EAAiC,gBAA4B;AAAA,sBAAfS,MAAe,QAAzB5F,MAAyB,CAAf4F,MAAe;;AACzD,sBAAI,CAACe,QAAD,IAAaA,QAAQ,CAACC,KAAT,KAAmB,WAApC,EAAiD;AAC7C;AACH;;AACDD,kBAAAA,QAAQ,CAACnB,IAAT;AACH,iBALD,EAKG;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBALH,GAOA;AACA;AACA;AACA;;kDACO,IAAItE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,sBAAMwF,KAAK,GAAG,EAAd;;AACAF,kBAAAA,QAAQ,CAACG,eAAT,GAA2B,UAAA1B,CAAC,EAAI;AAC5B,wBAAI,OAAOA,CAAC,CAACpC,IAAT,KAAkB,WAAlB,IAAiCoC,CAAC,CAACpC,IAAF,CAAO+D,IAAP,GAAc,CAAnD,EAAsD;AAClDF,sBAAAA,KAAK,CAACG,IAAN,CAAW5B,CAAC,CAACpC,IAAb;AACH;AACJ,mBAJD;;AAKA2D,kBAAAA,QAAQ,CAACM,MAAT,GAAkB,UAAA7B,CAAC,EAAI;AACnB,wBAAIyB,KAAK,CAAC/F,MAAN,GAAe,CAAnB,EAAsB;AAClBM,sBAAAA,OAAO,CAAC,IAAIyB,IAAJ,CAASgE,KAAT,EAAgB;AAAE5D,wBAAAA,IAAI,EAAE4D,KAAK,CAAC,CAAD,CAAL,CAAS5D;AAAjB,uBAAhB,CAAD,CAAP;AACH,qBAFD,MAEO;AACH7B,sBAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ,mBAND;;AAOAuF,kBAAAA,QAAQ,CAACjF,OAAT,GAAmB,UAAA0D,CAAC,EAAI;AACpB/D,oBAAAA,MAAM,CAAC+D,CAAC,CAACzD,KAAH,CAAN;AACH,mBAFD;;AAGAgF,kBAAAA,QAAQ,CAACO,KAAT,CAAe9C,OAAO,CAACO,SAAvB;AACH,iBAlBM;;;;;;;;;;;;;;;;;;;gGAqBMR,SAASE,QAAQD;;;;;;;;AACxB+C,gBAAAA,gBAAgB9C,MAAM,CAAC+C,cAAP,GAAwB,CAAxB,EAA2BC,WAA3B;AAChBvF,gBAAAA,aAAaqF,aAAa,CAACrF,UAAd,IAA4B;kDACxC,uBAAWsC,OAAO,CAAClC,SAAnB,EAA8B,UAACM,MAAD,EAAY;AAC7C,sBAAMwD,OAAO,GAAG7B,OAAO,CAAC6B,OAAR,IAAoB,KAAK,IAAzC,CAD6C,CACG;;AAChDxD,kBAAAA,MAAM,CAAC0D,WAAP,CAAmB;AACfjD,oBAAAA,IAAI,EAAE,MADS;AAEfnB,oBAAAA,UAAU,EAAVA,UAFe;AAGfkE,oBAAAA,OAAO,EAAPA;AAHe,mBAAnB;;AAMA,kBAAA,KAAI,CAACsB,cAAL,CAAoBnD,OAApB,EAA6BE,MAA7B,EAAqC,UAACkD,OAAD,EAAa;AAC9C/E,oBAAAA,MAAM,CAAC0D,WAAP,CAAmB;AACfjD,sBAAAA,IAAI,EAAE,MADS;AAEfD,sBAAAA,IAAI,EAAEuE,OAAO,CAAChB;AAFC,qBAAnB,EAGG,CAACgB,OAAO,CAAChB,MAAT,CAHH;AAIH,mBALD;;AAOApC,kBAAAA,OAAO,CAACgB,gBAAR,CAAyB,MAAzB,EAAiC,UAAAC,CAAC,EAAI;AAClC;AACA5C,oBAAAA,MAAM,CAAC0D,WAAP,CAAmB;AACfjD,sBAAAA,IAAI,EAAE;AADS,qBAAnB;AAGH,mBALD;AAMH,iBArBM;;;;;;;;;;;;;;;;;;;sGAwBUkB,SAASE,QAAQmD;;;;;;AAC5BC,gBAAAA,eAAe,IAAIzF,YAAJ;AAEf0F,gBAAAA,aAAaD,YAAY,CAACE,uBAAb,CAAqCtD,MAArC;AAEbuD,gBAAAA,gBAAgBH,YAAY,CAACI,qBAAb,CAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC;;AACtBD,gBAAAA,aAAa,CAACE,cAAd,GAA+B,UAAC1C,CAAD;AAAA,yBAAOoC,SAAS,CAAC,2BAAepC,CAAC,CAAC2C,WAAjB,EAA8B,CAA9B,CAAD,CAAhB;AAAA,iBAA/B;;AAEAL,gBAAAA,UAAU,CAACM,OAAX,CAAmBJ,aAAnB;AACAA,gBAAAA,aAAa,CAACI,OAAd,CAAsBP,YAAY,CAACQ,WAAnC;AAEA9D,gBAAAA,OAAO,CAACgB,gBAAR,CAAyB,MAAzB,EAAiC,UAAAC,CAAC,EAAI;AAClCsC,kBAAAA,UAAU,CAACQ,UAAX;AACH,iBAFD;;;;;;;;;;;;;;;;;;;;;;eAMOhE;;;;;;;;;;ACpOf;;;;;;;;;;;;IAEaiE;AACT,+BAAc;AAAA;AACb;;;;uCAEkBhE,SAAS;AAAA,UAChBzB,IADgB,GACDyB,OADC,CAChBzB,IADgB;AAAA,UACV0F,IADU,GACDjE,OADC,CACViE,IADU;AAExB,UAAMC,MAAM,GAAG9E,QAAQ,CAAC+E,aAAT,CAAuB,QAAvB,CAAf;AACAD,MAAAA,MAAM,CAAC5E,GAAP,GAAaf,IAAb;AACA2F,MAAAA,MAAM,CAACE,IAAP,GAAc,cAAd;AACAF,MAAAA,MAAM,CAACG,KAAP,GAAe,YAAf;;AACA,UAAIJ,IAAI,KAAK,SAAb,EAAwB;AACpBC,QAAAA,MAAM,CAACI,KAAP,GAAe,CAAf;AACAJ,QAAAA,MAAM,CAACK,MAAP,GAAgB,CAAhB;AACAL,QAAAA,MAAM,CAACM,KAAP,CAAaC,OAAb,GAAuB,MAAvB;AACH,OAJD,MAIO;AACHP,QAAAA,MAAM,CAACI,KAAP,GAAe,GAAf;AACAJ,QAAAA,MAAM,CAACK,MAAP,GAAgB,GAAhB;AACAL,QAAAA,MAAM,CAACM,KAAP,CAAaE,MAAb,GAAsB,MAAtB;AACH;;AACD,aAAOR,MAAP;AACH;;;;6FAEYlE,SAASC;;;;;oBACbD,OAAO,CAACkE;;;;;sBACH,IAAI9F,KAAJ,CAAU,sCAAV;;;iDAEH,IAAIpB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpC,sBAAMyH,OAAO,GAAGC,uBAAuB,CAAC5E,OAAO,CAACkE,MAAT,EAAiB,UAAAjD,CAAC,EAAI;AACzD1B,oBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCyB,CAAhC;;AACA,wBAAIA,CAAC,CAACpC,IAAF,CAAOC,IAAP,KAAgB,UAApB,EAAgC;AAC5B,+CAAakB,OAAb,EAAsB,UAAtB,EAAkC;AAAEjD,wBAAAA,IAAI,EAAEkE,CAAC,CAACpC,IAAF,CAAO9B;AAAf,uBAAlC;AACAE,sBAAAA,OAAO,CAACgE,CAAC,CAACpC,IAAF,CAAO9B,IAAR,CAAP;AACA4H,sBAAAA,OAAO;AACV,qBAJD,MAIO,IAAI1D,CAAC,CAACpC,IAAF,CAAOC,IAAP,KAAgB,OAApB,EAA6B;AAChC,0BAAMtB,KAAK,GAAGyD,CAAC,CAACpC,IAAF,CAAOrB,KAArB;AACA,+CAAawC,OAAb,EAAsB,OAAtB,EAA+B;AAAExC,wBAAAA,KAAK,EAALA;AAAF,uBAA/B;AACAN,sBAAAA,MAAM,CAACM,KAAD,CAAN;AACAmH,sBAAAA,OAAO;AACV,qBAXwD,CAYzD;;AACH,mBAbsC,CAAvC;AAcAE,kBAAAA,kBAAkB,CAAC7E,OAAO,CAACkE,MAAT,EAAiB;AAAEpF,oBAAAA,IAAI,EAAE,QAAR;AAAkBmB,oBAAAA,OAAO,EAAPA;AAAlB,mBAAjB,CAAlB;AAEA,2CAAaD,OAAb,EAAsB,QAAtB,EAAgC,EAAhC;AACH,iBAnBM;;;;;;;;;;;;;;;;;;yBAsBNA,SAASyB,QAAQ;AAClB,+BAAazB,OAAb,EAAsB,MAAtB,EAA8B;AAAEyB,QAAAA,MAAM,EAANA;AAAF,OAA9B;;AAEA,UAAIzB,OAAO,CAACkE,MAAZ,EAAoB;AAChBU,QAAAA,uBAAuB,CAAC5E,OAAO,CAACkE,MAAT,EAAiB,UAAAjD,CAAC,EAAI;AACzC1B,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCyB,CAAhC,EADyC,CAEzC;AACH,SAHsB,EAGpB;AAAEK,UAAAA,IAAI,EAAE;AAAR,SAHoB,CAAvB;AAIAuD,QAAAA,kBAAkB,CAAC7E,OAAO,CAACkE,MAAT,EAAiB;AAAEpF,UAAAA,IAAI,EAAE;AAAR,SAAjB,CAAlB;AACH;AACJ;;;;+FAEakB,SAAS0B;;;;;;;AAAWzB,gBAAAA,qEAAU;;;;;;;;;;;;;;;;;;;;;;;AAKhD,SAAS6E,cAAT,GAA0B;AACtB,MAAI,CAAC1F,QAAQ,CAAC2F,QAAd,EAAwB;AACpB,WAAO,IAAP;AACH;;AACD,MAAMC,GAAG,GAAG,IAAI1G,GAAJ,CAAQc,QAAQ,CAAC2F,QAAjB,CAAZ;AACA,mBAAUC,GAAG,CAAC5E,QAAd,eAA2B4E,GAAG,CAACzG,IAA/B;AACH;;AAED,SAAS0G,cAAT,CAAwBC,KAAxB,EAA+BtG,GAA/B,EAAoC;AAChC,MAAI,CAACsG,KAAL,EAAY;AACR,UAAM,IAAI9G,KAAJ,CAAU,eAAV,CAAN;AACH;;AACD,MAAI,CAACQ,GAAD,IAAQ,CAACA,GAAG,CAACuG,MAAjB,EAAyB;AACrB,UAAM,IAAI/G,KAAJ,CAAU,2CAAV,CAAN;AACH;;AACDQ,EAAAA,GAAG,CAACuG,MAAJ,CAAWpD,WAAX,CAAuBmD,KAAvB,EAA8BtG,GAAG,CAACwG,MAAlC;AACH;;AAED,SAASP,kBAAT,CAA4BQ,KAA5B,EAAmCzG,GAAnC,EAAwC;AACpC,MAAI,CAACyG,KAAD,IAAU,CAACA,KAAK,CAAC/F,GAArB,EAA0B;AACtB,UAAM,IAAIlB,KAAJ,CAAU,4BAAV,CAAN;AACH;;AACD,MAAMkH,QAAQ,GAAG,IAAIhH,GAAJ,CAAQ+G,KAAK,CAAC/F,GAAd,CAAjB;AACA,MAAMiG,WAAW,aAAMD,QAAQ,CAAClF,QAAf,eAA4BkF,QAAQ,CAAC/G,IAArC,CAAjB;AAEA8G,EAAAA,KAAK,CAACG,aAAN,CAAoBzD,WAApB,CAAgCnD,GAAhC,EAAqC2G,WAArC;AACH;;AAED,SAASX,uBAAT,CAAiCS,KAAjC,EAAwCI,QAAxC,EAAkD;AAC9C,MAAI,CAACJ,KAAD,IAAU,CAACA,KAAK,CAAC/F,GAArB,EAA0B;AACtB,UAAM,IAAIlB,KAAJ,CAAU,4BAAV,CAAN;AACH;;AACD,MAAMkH,QAAQ,GAAG,IAAIhH,GAAJ,CAAQ+G,KAAK,CAAC/F,GAAd,CAAjB;AACA,MAAMiG,WAAW,aAAMD,QAAQ,CAAClF,QAAf,eAA4BkF,QAAQ,CAAC/G,IAArC,CAAjB;;AAEA,MAAMmH,QAAQ,GAAG,SAAXA,QAAW,CAAAzE,CAAC;AAAA,WAAIA,CAAC,CAACmE,MAAF,KAAaG,WAAb,IAA4BE,QAAQ,CAACxE,CAAD,CAAxC;AAAA,GAAlB;;AACAhD,EAAAA,MAAM,CAAC+C,gBAAP,CAAwB,SAAxB,EAAmC0E,QAAnC;AACA,SAAO,YAAM;AACTzH,IAAAA,MAAM,CAAC0H,mBAAP,CAA2B,SAA3B,EAAsCD,QAAtC;AACH,GAFD;AAGH;;eAEc1B;;;;;;;;;;AC7Gf;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEa4B;;;;;AACT;AAGA,0BAAc;AAAA;;AAAA;AAEb,IAED;AACA;AACA;AACA;;;;;6CACyBxB,MAAMpI,UAAU6J,UAAU;AAC/C,cAAQzB,IAAR;AACI,aAAK,SAAL;AACI,eAAKvC,OAAL,GAAe,0BAAcgE,QAAd,EAAwB7J,QAAxB,CAAf;AACA;;AACJ,aAAK,MAAL;AACI,eAAKuC,IAAL,GAAYsH,QAAZ;AACA;;AACJ,aAAK,MAAL;AACItG,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB;AAAExD,YAAAA,QAAQ,EAARA,QAAF;AAAY6J,YAAAA,QAAQ,EAARA;AAAZ,WAApB;;AACA,cAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAC9B,iBAAK5B,IAAL,GAAY4B,QAAQ,CAAC3J,IAAT,GAAgB4J,WAAhB,EAAZ;AACH;;AACD;;AACJ;AACI;AAdR;AAgBH,MAED;;;;wCACoB;AAAA;;AAChB,UAAI,KAAKvH,IAAT,EAAe;AACX,aAAKwH,OAAL,GAAe,IAAI/B,oCAAJ,EAAf;AACA,aAAKE,MAAL,GAAc,KAAK6B,OAAL,CAAaC,kBAAb,CAAgC,IAAhC,CAAd;AACA,aAAKC,WAAL,CAAiB,KAAK/B,MAAtB;AACH,OAJD,MAIO;AACH,aAAK6B,OAAL,GAAe,IAAIhG,kCAAJ,EAAf;;AACA,YAAI,KAAKkE,IAAL,KAAc,SAAlB,EAA6B;AACzB,cAAIiC,aAAJ;AACA,cAAMvB,OAAO,GAAGwB,wBAAwB,CAAC,UAAAlF,CAAC,EAAI;AAC1CiF,YAAAA,aAAa,GAAGjF,CAAC,CAACmE,MAAlB;;AACA,oBAAQnE,CAAC,CAACpC,IAAF,CAAOC,IAAf;AACI,mBAAK,QAAL;AACI,gBAAA,KAAI,CAACsH,MAAL,CAAYnF,CAAC,CAACpC,IAAF,CAAOoB,OAAnB;;AACA;;AACJ,mBAAK,MAAL;AACI,gBAAA,KAAI,CAACoB,IAAL,CAAUJ,CAAC,CAACpC,IAAF,CAAO4C,MAAjB;;AACA;;AACJ;AACIlC,gBAAAA,OAAO,CAAC/B,KAAR,CAAc,sBAAd,EAAsCyD,CAAC,CAACpC,IAAxC;AARR;AAUH,WAZuC,CAAxC;AAaA,eAAKmC,gBAAL,CAAsB,UAAtB,EAAkC,UAAAC,CAAC,EAAI;AAAA,gBAC3BlE,IAD2B,GAClBkE,CAAC,CAACpF,MADgB,CAC3BkB,IAD2B;;AAEnC,gBAAIA,IAAI,IAAImJ,aAAZ,EAA2B;AACvBG,cAAAA,MAAM,CAACtE,WAAP,CAAmB;AACfjD,gBAAAA,IAAI,EAAE,UADS;AAEf/B,gBAAAA,IAAI,EAAJA;AAFe,eAAnB,EAGGmJ,aAHH;AAIH;AACJ,WARD;AASH;AACJ;AACJ,MAED;;;;2CACuB,CACtB,EAED;;;;sCACkB,CACjB;;;kCAEa;AACV,aACIhH,SAAS,CAACC,YAAV,IAA0BD,SAAS,CAACC,YAAV,CAAuBF,YAAjD,IACAhB,MAAM,CAACkC,aADP,IAEAlC,MAAM,CAACC,MAFP,IAGAD,MAAM,CAACE,WAJX;AAMH;;;;;;;;;;;AAEY8B,gBAAAA,kEAAU;AACnBA,gBAAAA,OAAO,GAAGK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AACxBzB,kBAAAA,IAAI,EAAE;AADkB,iBAAlB,EAEPmB,OAFO,CAAV;;sBAIIA,OAAO,CAACnB,IAAR,KAAiB,MAAjB,IAA2BmB,OAAO,CAACnB,IAAR,KAAiB;;;;;sBACtC,IAAIV,KAAJ,CAAU,wBAAV;;;iDAGH,KAAK2H,OAAL,CAAaK,MAAb,CAAoB,IAApB,EAA0BnG,OAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;AAGAwB,gBAAAA,oEAAS;kDACT,KAAKsE,OAAL,CAAa1E,IAAb,CAAkB,IAAlB,EAAwBI,MAAxB;;;;;;;;;;;;;;;;;;;+FAGGC;;;;;;;AAAWzB,gBAAAA,qEAAU;kDACxB,KAAK8F,OAAL,CAAaO,OAAb,CAAqB,IAArB,EAA2B5E,SAA3B,EAAsCzB,OAAtC;;;;;;;;;;;;;;;;;;;iCArGmBsG;;;;gBAArBX,oCAEmB,CAAC,SAAD,EAAY,MAAZ,EAAoB,MAApB;;AAuGhC,SAASO,wBAAT,CAAkCV,QAAlC,EAA4C;AACxC,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAzE,CAAC;AAAA,WAAIA,CAAC,CAACkE,MAAF,KAAakB,MAAb,IAAuBZ,QAAQ,CAACxE,CAAD,CAAnC;AAAA,GAAlB;;AACAhD,EAAAA,MAAM,CAAC+C,gBAAP,CAAwB,SAAxB,EAAmC0E,QAAnC;AACA,SAAO,YAAM;AACTzH,IAAAA,MAAM,CAAC0H,mBAAP,CAA2B,SAA3B,EAAsCD,QAAtC;AACH,GAFD;AAGH;;;;;;;;ACnHD;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,IAAI,OAAOzH,MAAP,KAAkB,WAAtB,EAAmC;AAC/BA,EAAAA,MAAM,CAAC2H,YAAP,GAAsBA,0BAAtB;;AACA,MAAI,oBAAoB3H,MAAxB,EAAgC;AAC5BuI,IAAAA,cAAc,CAACC,MAAf,CAAsB,eAAtB,EAAuCb,0BAAvC;AACH;AACJ","file":"talk-recorder.js","sourceRoot":"../src","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/**\n * Turns a promise into callback.\n * \n * @param {Promise} promise \n * @param {function} cb \n */\nexport function promiseCallback(promise, cb) {\n    return promise.then(result => cb(null, result)).catch(err => cb(err, result));\n}\n\n/**\n * Helper for dispatching a custom event.\n * Default EventInit values are implicitly used, meaning events cannot be captured nor bubbled.\n * \n * @param {EventTarget} eventTarget \n * @param {string} eventName \n * @param {any} eventDetail \n */\nexport function triggerEvent(eventTarget, eventName, eventDetail = null) {\n    eventTarget.dispatchEvent(new CustomEvent(eventName, { detail: eventDetail }));\n}\n\nexport function friendlyFloat(value, oldValue) {\n    if (typeof value !== 'string') {\n        return oldValue;\n    }\n    const lastChar = value.trim().substr(-1);\n    let floatValue = parseFloat(value);\n    if (lastChar === 'k' || lastChar === 'K') {\n        floatValue *= 1000;\n    }\n    return floatValue;\n}\n\n/**\n * Get 'Transferable' raw audio samples from AudioBuffer.\n * This is a convenience function to pave over lack of ubiquitous copyFromChannel support.\n * \n * @param {AudioBuffer} audioBuffer \n * @param {number} channel \n */\nexport function getChannelData(audioBuffer, channel) {\n    let channelData;\n    if ('copyFromChannel' in audioBuffer) {\n        channelData = new Float32Array(audioBuffer.length);\n        audioBuffer.copyFromChannel(channelData, channel);\n    } else {\n        channelData = audioBuffer.getChannelData(channel).slice();\n    }\n    return channelData;\n}\n\nexport async function arrayBufferFromBlob(blob) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsArrayBuffer(blob);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = () => reject(reader.error);\n    });\n}\n\nexport async function decodeAudioData(audioData, sampleRate = 48000) {\n    // OfflineAudioContext is more appropriate here but plain AudioContext\n    // is used to avoid potential outstanding unreleased memory issue.\n    const audioCtx = new AudioContext({ sampleRate });\n    const audioBuffer = await audioCtx.decodeAudioData(audioData);\n    return getChannelData(audioBuffer, 0);\n}\n\nexport async function withWorker(workerUrl, workHandler) {\n    // Needs a Web Worker and WebAssembly supporting browser\n    if (!window.Worker || !window.WebAssembly) {\n        throw new Error('Worker and WebAssembly features not available');\n    }\n    return new Promise((resolve, reject) => {\n        let worker;\n        if (new URL(workerUrl).host === window.location.host) {\n            worker = new Worker(workerUrl);\n        } else {\n            worker = new Worker(URL.createObjectURL(new Blob([`importScripts(\"${workerUrl}\");`])));\n        }\n        worker.onmessage = (msg) => {\n            switch (msg.data.type) {\n                case 'ready':\n                    workHandler(worker);\n                    break;\n                case 'done':\n                    worker.terminate();\n                    resolve(msg.data.blob);\n                    break;\n            }\n        };\n        worker.onerror = (err) => {\n            reject(err);\n        };\n    });\n}\n","import {\n    arrayBufferFromBlob,\n    decodeAudioData,\n    getChannelData,\n    triggerEvent,\n    withWorker\n} from \"./utils\";\n\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\nconst getUserMedia = navigator.mediaDevices ? navigator.mediaDevices.getUserMedia : navigator.getUserMedia;\n\n// HACK: determine default worker URL using script tag's src attribute if available.\nlet workerUrl = \"./lamemp3/worker.js\";\nif (document.currentScript && document.currentScript.src) {\n    console.log('determine workerUrl', {\n        currentScript: document.currentScript,\n        currentScriptSrc: document.currentScript.src,\n    })\n    const scriptUrl = new URL(document.currentScript.src, document.baseURI).toString();\n    const scriptBaseUrl = scriptUrl.substr(0, scriptUrl.lastIndexOf('/'));\n    workerUrl = `${scriptBaseUrl}/lamemp3/worker.js`;\n}\n\nexport class TalkLocalService {\n    constructor() {\n    }\n\n    async record(element, options) {\n        if (element.stream) {\n            throw new Error('already recording');\n        }\n        if (!window.MediaRecorder || !window.Worker || !window.WebAssembly) {\n            throw new Error('Current browser is not supported by talk-recorder');\n        }\n        if (!getUserMedia && !element.host && window.location.protocol !== 'https:' && window.location.hostname !== 'localhost') {\n            throw new Error('HTTPS is required for media recording.');\n        }\n\n        options = Object.assign({\n            type: 'opus',\n            timeslice: 20,\n            workerUrl,\n        }, options)\n\n        // Use optional 'getUserMedia' field of recording call options to override.\n        const getUserMediaOptions = Object.assign({}, {\n            audio: true,\n            video: false,\n            channelCount: 1,\n            autoGainControl: true,\n            echoCancellation: true,\n            noiseSuppression: true\n        }, options.getUserMedia);\n\n        // start capturing audio\n        element.stream = await navigator.mediaDevices.getUserMedia(getUserMediaOptions);\n\n        triggerEvent(element, 'record', { stream: element.stream });\n\n        element.addEventListener('stop', e => {\n            element.stream.getTracks().forEach(track => track.stop());\n            element.stream = null;\n        }, { once: true });\n\n        try {\n            let blob;\n            if (options.type === 'opus') {\n                blob = await this._recordOpus(element, element.stream, options);\n            } else if (options.type === 'mp3') {\n                blob = await this._recordMP3(element, element.stream, options);\n            }\n            triggerEvent(element, 'recorded', { blob });\n            return blob;\n        } catch (err) {\n            triggerEvent(element, 'error', { error: err });\n            throw err;\n        }\n    }\n\n    stop(element, reason) {\n        triggerEvent(element, 'stop', { reason });\n    }\n\n    async convert(element, audioBlob, options = {}) {\n        triggerEvent(element, 'convert');\n\n        options = Object.assign({}, {\n            sampleRate: 48000,\n            type: 'mp3',\n            workerUrl,\n        }, options);\n\n        // decode audio samples using 48000 as default input sample rate.\n        const inputSampleRate = options.sampleRate || 48000;\n        const audioData = await arrayBufferFromBlob(audioBlob);\n        const inputPCM = await decodeAudioData(audioData, inputSampleRate);\n        const bitRate = element.bitRate || 64 * 1000; // MP3-specific default bitRate\n\n        // Until direct to MP3 encoder implemented, record as Opus first then convert as a whole.\n        return withWorker(options.workerUrl, (worker) => {\n            const CHUNK_SIZE = 8192;\n            worker.postMessage({\n                type: 'init',\n                sampleRate: inputSampleRate,\n                bitRate\n            });\n\n            // send to worker in chunks\n            let offset = 0;\n            let remain = inputPCM.length;\n            while (remain > 0) {\n                const length = remain > CHUNK_SIZE ? CHUNK_SIZE : remain;\n\n                // slice out a chunk into its own ArrayBuffer\n                const chunk = new Float32Array(length);\n                chunk.set(inputPCM.slice(offset, offset + length), 0);\n                offset += length;\n                remain -= length;\n\n                worker.postMessage({\n                    type: 'data',\n                    data: chunk.buffer,\n                }, [chunk.buffer]);\n            }\n\n            // signal end of data\n            worker.postMessage({\n                type: 'flush',\n            });\n        }).then(blob => {\n            triggerEvent(element, 'converted', { blob });\n            return blob;\n        }).catch(err => {\n            triggerEvent(element, 'error', { error: err });\n            throw err;\n        })\n    }\n\n    async _recordOpus(element, stream, options) {\n        const bitRate = element.bitRate || (32 * 1000); // Uses 32k as default bitrate for Opus podcast\n\n        // Use optional 'MediaRecorder' field of recording call options to override.\n        const mediaRecorderOptions = Object.assign({}, {\n            mimeType: 'audio/webm; codecs=\"opus\"',\n            audioBitsPerSecond: bitRate,\n        }, options.MediaRecorder);\n\n        // MediaRecorder instance had issues when reused.\n        // So each recording session creates a new instance internally.\n        const recorder = new MediaRecorder(stream, mediaRecorderOptions);\n\n        // Stop event is used to stop recording.\n        element.addEventListener('stop', ({ detail: { reason } }) => {\n            if (!recorder || recorder.state !== 'recording') {\n                return;\n            }\n            recorder.stop()\n        }, { once: true });\n\n        // Time-sliced blobs from MediaRecorders are not guaranteed to honor logical boundaries.\n        // So blobs are merged to form a proper opus packets in webm container is returned when stopped.\n        // Override optional 'timeslice' recording option to change timeslice duration (default 20ms).\n        // Note that resulting audio file's duration field is not set correctly on Chrome.\n        return new Promise((resolve, reject) => {\n            const blobs = [];\n            recorder.ondataavailable = e => {\n                if (typeof e.data !== \"undefined\" && e.data.size > 0) {\n                    blobs.push(e.data);\n                }\n            };\n            recorder.onstop = e => {\n                if (blobs.length > 0) {\n                    resolve(new Blob(blobs, { type: blobs[0].type }))\n                } else {\n                    resolve(null);\n                }\n            };\n            recorder.onerror = e => {\n                reject(e.error);\n            }\n            recorder.start(options.timeslice);\n        })\n    }\n\n    async _recordMP3(element, stream, options) {\n        const audioSettings = stream.getAudioTracks()[0].getSettings();\n        const sampleRate = audioSettings.sampleRate || 48000;\n        return withWorker(options.workerUrl, (worker) => {\n            const bitRate = element.bitRate || (64 * 1024); // MP3-specific default bitrate for podcasting\n            worker.postMessage({\n                type: 'init',\n                sampleRate,\n                bitRate\n            });\n\n            this._processStream(element, stream, (samples) => {\n                worker.postMessage({\n                    type: 'data',\n                    data: samples.buffer,\n                }, [samples.buffer]);\n            })\n\n            element.addEventListener(\"stop\", e => {\n                // signal end of data\n                worker.postMessage({\n                    type: 'flush',\n                });\n            })\n        })\n    }\n\n    async _processStream(element, stream, processor) {\n        const audioContext = new AudioContext()\n\n        const sourceNode = audioContext.createMediaStreamSource(stream);\n\n        const processorNode = audioContext.createScriptProcessor(0, 1, 1);\n        processorNode.onaudioprocess = (e) => processor(getChannelData(e.inputBuffer, 0))\n\n        sourceNode.connect(processorNode);\n        processorNode.connect(audioContext.destination);\n\n        element.addEventListener(\"stop\", e => {\n            sourceNode.disconnect();\n        })\n    }\n}\n\nexport default TalkLocalService;","import { triggerEvent } from \"./utils\";\n\nexport class TalkRemoteService {\n    constructor() {\n    }\n\n    createServiceFrame(element) {\n        const { host, role } = element;\n        const iframe = document.createElement('iframe');\n        iframe.src = host;\n        iframe.name = \"talk-service\";\n        iframe.allow = \"microphone\";\n        if (role === 'iframer') {\n            iframe.width = 0;\n            iframe.height = 0;\n            iframe.style.display = 'none';\n        } else {\n            iframe.width = 500;\n            iframe.height = 500;\n            iframe.style.border = 'none';\n        }\n        return iframe;\n    }\n\n    async record(element, options) {\n        if (!element.iframe) {\n            throw new Error('service frame to host failed to open');\n        }\n        return new Promise((resolve, reject) => {\n\n            const cleanup = receiveMessageFromFrame(element.iframe, e => {\n                console.log(\"iframer received\", e);\n                if (e.data.type === 'recorded') {\n                    triggerEvent(element, 'recorded', { blob: e.data.blob })\n                    resolve(e.data.blob);\n                    cleanup();\n                } else if (e.data.type === 'error') {\n                    const error = e.data.error;\n                    triggerEvent(element, 'error', { error })\n                    reject(error)\n                    cleanup();\n                }\n                // replyToMessage({ type: 'reply' }, e);\n            })\n            sendMessageToFrame(element.iframe, { type: 'record', options });\n\n            triggerEvent(element, 'record', {});\n        })\n    }\n\n    stop(element, reason) {\n        triggerEvent(element, 'stop', { reason });\n\n        if (element.iframe) {\n            receiveMessageFromFrame(element.iframe, e => {\n                console.log(\"iframer received\", e);\n                // replyToMessage({ type: 'reply' }, e);\n            }, { once: true })\n            sendMessageToFrame(element.iframe, { type: 'stop' });\n        }\n    }\n\n    async convert(element, audioBlob, options = {}) {\n\n    }\n}\n\nfunction referrerOrigin() {\n    if (!document.referrer) {\n        return null;\n    }\n    const url = new URL(document.referrer);\n    return `${url.protocol}//${url.host}`;\n}\n\nfunction replyToMessage(reply, msg) {\n    if (!reply) {\n        throw new Error('reply is null');\n    }\n    if (!msg || !msg.source) {\n        throw new Error('message to reply to or its source is null');\n    }\n    msg.source.postMessage(reply, msg.origin);\n}\n\nfunction sendMessageToFrame(frame, msg) {\n    if (!frame || !frame.src) {\n        throw new Error('frame or frame.src is null');\n    }\n    const frameURL = new URL(frame.src);\n    const frameOrigin = `${frameURL.protocol}//${frameURL.host}`;\n\n    frame.contentWindow.postMessage(msg, frameOrigin);\n}\n\nfunction receiveMessageFromFrame(frame, receiver) {\n    if (!frame || !frame.src) {\n        throw new Error('frame or frame.src is null');\n    }\n    const frameURL = new URL(frame.src);\n    const frameOrigin = `${frameURL.protocol}//${frameURL.host}`;\n\n    const listener = e => e.origin === frameOrigin && receiver(e);\n    window.addEventListener('message', listener);\n    return () => {\n        window.removeEventListener('message', listener);\n    }\n}\n\nexport default TalkRemoteService;","import { TalkLocalService } from \"./TalkLocalService\";\nimport { TalkRemoteService } from \"./TalkRemoteService\"\nimport { friendlyFloat } from \"./utils\";\n\nexport class TalkRecorder extends HTMLElement {\n    // Lowercased names of modifiable attributes to receive attributeChangedCallback on.\n    static observedAttributes = [\"bitrate\", \"host\", \"role\"];\n\n    constructor() {\n        super();\n    }\n\n    // Callback used to notify when an attribute in `observedAttributes` list changes value.\n    // Also called before connectedCallback with each attribute's initial value.\n    // Attributes covered include custom as well as built-in attributes, like style.\n    // NOTE: attribute name will be in lowercase as specfied in the HTML spec.\n    attributeChangedCallback(name, oldValue, newValue) {\n        switch (name) {\n            case 'bitrate':\n                this.bitRate = friendlyFloat(newValue, oldValue);\n                break;\n            case 'host':\n                this.host = newValue;\n                break;\n            case 'role':\n                console.log('role', { oldValue, newValue });\n                if (typeof newValue === 'string') {\n                    this.role = newValue.trim().toLowerCase();\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    // Callback to notify custom element has been inserted into document.\n    connectedCallback() {\n        if (this.host) {\n            this.service = new TalkRemoteService();\n            this.iframe = this.service.createServiceFrame(this);\n            this.appendChild(this.iframe);\n        } else {\n            this.service = new TalkLocalService();\n            if (this.role === 'iframed') {\n                let iframerOrigin;\n                const cleanup = receiveMessageFromParent(e => {\n                    iframerOrigin = e.origin;\n                    switch (e.data.type) {\n                        case 'record':\n                            this.record(e.data.options);\n                            break;\n                        case 'stop':\n                            this.stop(e.data.reason);\n                            break;\n                        default:\n                            console.error('unknown message type', e.data);\n                    }\n                })\n                this.addEventListener('recorded', e => {\n                    const { blob } = e.detail;\n                    if (blob && iframerOrigin) {\n                        parent.postMessage({\n                            type: 'recorded',\n                            blob,\n                        }, iframerOrigin)\n                    }\n                })\n            }\n        }\n    }\n\n    // Callback to notify custom element has been removed from document.\n    disconnectedCallback() {\n    }\n\n    // Callback to notify custom element's parentNode changes\n    adoptedCallback() {\n    }\n\n    isSupported() {\n        return (\n            navigator.mediaDevices && navigator.mediaDevices.getUserMedia &&\n            window.MediaRecorder &&\n            window.Worker &&\n            window.WebAssembly\n        );\n    }\n\n    async record(options = {}) {\n        options = Object.assign({}, {\n            type: 'opus',\n        }, options);\n\n        if (options.type !== 'opus' && options.type !== 'mp3') {\n            throw new Error('unknown recording type');\n        }\n\n        return this.service.record(this, options);\n    }\n\n    async stop(reason = 'finish') {\n        return this.service.stop(this, reason);\n    }\n\n    async convert(audioBlob, options = {}) {\n        return this.service.convert(this, audioBlob, options);\n    }\n}\n\nfunction receiveMessageFromParent(receiver) {\n    const listener = e => e.source === parent && receiver(e);\n    window.addEventListener('message', listener);\n    return () => {\n        window.removeEventListener('message', listener);\n    }\n}\n","import \"regenerator-runtime/runtime\";\nexport * from \"./TalkRecorder\";\nimport { TalkRecorder } from \"./TalkRecorder\";\n\nif (typeof window !== 'undefined') {\n    window.TalkRecorder = TalkRecorder;\n    if ('customElements' in window) {\n        customElements.define(\"talk-recorder\", TalkRecorder);\n    }\n}\n"]}