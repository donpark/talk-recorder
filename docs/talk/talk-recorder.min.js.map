{"version":3,"sources":["../node_modules/regenerator-runtime/runtime.js","utils.js","TalkLocalService.js","TalkRemoteService.js","FramePort.js","TalkRecorder.js","recorder.js"],"names":["promiseCallback","promise","cb","then","result","catch","err","triggerEvent","eventTarget","eventName","eventDetail","dispatchEvent","CustomEvent","detail","friendlyFloat","value","oldValue","lastChar","trim","substr","floatValue","parseFloat","getChannelData","audioBuffer","channel","channelData","Float32Array","length","copyFromChannel","slice","arrayBufferFromBlob","blob","Promise","resolve","reject","reader","FileReader","readAsArrayBuffer","onload","onerror","error","decodeAudioData","audioData","audioCtx","sampleRate","AudioContext","withWorker","workerUrl","workHandler","window","Worker","WebAssembly","Error","worker","URL","host","location","createObjectURL","Blob","onmessage","msg","data","type","terminate","webkitAudioContext","getUserMedia","navigator","mediaDevices","currentScriptURL","document","currentScript","src","baseURI","getFullScriptUrl","relativeUrl","toString","console","log","TalkLocalService","element","options","stream","MediaRecorder","protocol","hostname","Object","assign","timeslice","getUserMediaOptions","audio","video","channelCount","autoGainControl","echoCancellation","noiseSuppression","addEventListener","e","getTracks","forEach","track","stop","once","_recordOpus","_recordMP3","reason","audioBlob","inputSampleRate","inputPCM","bitRate","postMessage","remain","offset","chunk","set","buffer","mediaRecorderOptions","mimeType","audioBitsPerSecond","recorder","state","blobs","ondataavailable","size","push","onstop","start","audioSettings","getAudioTracks","getSettings","_processStream","samples","processor","audioContext","sourceNode","createMediaStreamSource","processorNode","createScriptProcessor","onaudioprocess","inputBuffer","connect","destination","disconnect","TalkRemoteService","role","iframe","createElement","name","allow","width","height","style","display","border","iframePort","EventTarget","FramePort","frameOrParent","HTMLIFrameElement","target","contentWindow","origin","parent","referrer","_reqCount","_receivers","_listener","_receiveMessage","removeEventListener","transfers","request","_registerRequest","response","_registerResponse","sendResponse","_dispatchResponse","receiver","_reqId","_resId","resId","TalkRecorder","HTMLElement","newValue","toLowerCase","service","createServiceFrame","appendChild","parentPort","record","convert","customElements","define"],"mappings":"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","file":"talk-recorder.min.js","sourceRoot":"../src","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/**\n * Turns a promise into callback.\n * \n * @param {Promise} promise \n * @param {function} cb \n */\nexport function promiseCallback(promise, cb) {\n    return promise.then(result => cb(null, result)).catch(err => cb(err, result));\n}\n\n/**\n * Helper for dispatching a custom event.\n * Default EventInit values are implicitly used, meaning events cannot be captured nor bubbled.\n * \n * @param {EventTarget} eventTarget \n * @param {string} eventName \n * @param {any} eventDetail \n */\nexport function triggerEvent(eventTarget, eventName, eventDetail = null) {\n    eventTarget.dispatchEvent(new CustomEvent(eventName, { detail: eventDetail }));\n}\n\nexport function friendlyFloat(value, oldValue) {\n    if (typeof value !== 'string') {\n        return oldValue;\n    }\n    const lastChar = value.trim().substr(-1);\n    let floatValue = parseFloat(value);\n    if (lastChar === 'k' || lastChar === 'K') {\n        floatValue *= 1000;\n    }\n    return floatValue;\n}\n\n/**\n * Get 'Transferable' raw audio samples from AudioBuffer.\n * This is a convenience function to pave over lack of ubiquitous copyFromChannel support.\n * \n * @param {AudioBuffer} audioBuffer \n * @param {number} channel \n */\nexport function getChannelData(audioBuffer, channel) {\n    let channelData;\n    if ('copyFromChannel' in audioBuffer) {\n        channelData = new Float32Array(audioBuffer.length);\n        audioBuffer.copyFromChannel(channelData, channel);\n    } else {\n        channelData = audioBuffer.getChannelData(channel).slice();\n    }\n    return channelData;\n}\n\nexport async function arrayBufferFromBlob(blob) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsArrayBuffer(blob);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = () => reject(reader.error);\n    });\n}\n\nexport async function decodeAudioData(audioData, sampleRate = 48000) {\n    // OfflineAudioContext is more appropriate here but plain AudioContext\n    // is used to avoid potential outstanding unreleased memory issue.\n    const audioCtx = new AudioContext({ sampleRate });\n    const audioBuffer = await audioCtx.decodeAudioData(audioData);\n    return getChannelData(audioBuffer, 0);\n}\n\nexport async function withWorker(workerUrl, workHandler) {\n    // Needs a Web Worker and WebAssembly supporting browser\n    if (!window.Worker || !window.WebAssembly) {\n        throw new Error('Worker and WebAssembly features not available');\n    }\n    return new Promise((resolve, reject) => {\n        let worker;\n        if (new URL(workerUrl).host === window.location.host) {\n            worker = new Worker(workerUrl);\n        } else {\n            worker = new Worker(URL.createObjectURL(new Blob([`importScripts(\"${workerUrl}\");`])));\n        }\n        worker.onmessage = (msg) => {\n            switch (msg.data.type) {\n                case 'ready':\n                    workHandler(worker);\n                    break;\n                case 'done':\n                    worker.terminate();\n                    resolve(msg.data.blob);\n                    break;\n            }\n        };\n        worker.onerror = (err) => {\n            reject(err);\n        };\n    });\n}\n","import {\n    arrayBufferFromBlob,\n    decodeAudioData,\n    getChannelData,\n    triggerEvent,\n    withWorker\n} from \"./utils\";\n\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\nconst getUserMedia = navigator.mediaDevices ? navigator.mediaDevices.getUserMedia : navigator.getUserMedia;\n\n// HACK: Used to determine full worker URL using script tag's src attribute if available.\nconst currentScriptURL = document.currentScript ? new URL(document.currentScript.src, document.baseURI) : null;\nfunction getFullScriptUrl(relativeUrl) {\n    return currentScriptURL ? new URL(relativeUrl, currentScriptURL).toString() : relativeUrl;\n}\nconst workerUrl = getFullScriptUrl(\"./lamemp3/worker.js\");\nconsole.log('workerUrl', workerUrl);\n\nexport class TalkLocalService {\n    constructor() {\n    }\n\n    async record(element, options) {\n        if (element.stream) {\n            throw new Error('already recording');\n        }\n        if (!window.MediaRecorder || !window.Worker || !window.WebAssembly) {\n            throw new Error('Current browser is not supported by talk-recorder');\n        }\n        if (!getUserMedia && !element.host && window.location.protocol !== 'https:' && window.location.hostname !== 'localhost') {\n            throw new Error('HTTPS is required for media recording.');\n        }\n\n        options = Object.assign({\n            type: 'opus',\n            timeslice: 20,\n            workerUrl,\n        }, options)\n\n        // Use optional 'getUserMedia' field of recording call options to override.\n        const getUserMediaOptions = Object.assign({}, {\n            audio: true,\n            video: false,\n            channelCount: 1,\n            autoGainControl: true,\n            echoCancellation: true,\n            noiseSuppression: true\n        }, options.getUserMedia);\n\n        // start capturing audio\n        element.stream = await navigator.mediaDevices.getUserMedia(getUserMediaOptions);\n\n        triggerEvent(element, 'record', { stream: element.stream });\n\n        element.addEventListener('stop', e => {\n            element.stream.getTracks().forEach(track => track.stop());\n            element.stream = null;\n        }, { once: true });\n\n        try {\n            let blob;\n            if (options.type === 'opus') {\n                blob = await this._recordOpus(element, element.stream, options);\n            } else if (options.type === 'mp3') {\n                blob = await this._recordMP3(element, element.stream, options);\n            }\n            triggerEvent(element, 'recorded', { blob });\n            return blob;\n        } catch (err) {\n            triggerEvent(element, 'error', { error: err });\n            throw err;\n        }\n    }\n\n    stop(element, reason) {\n        triggerEvent(element, 'stop', { reason });\n    }\n\n    async convert(element, audioBlob, options = {}) {\n        triggerEvent(element, 'convert');\n\n        options = Object.assign({}, {\n            sampleRate: 48000,\n            type: 'mp3',\n            workerUrl,\n        }, options);\n\n        // decode audio samples using 48000 as default input sample rate.\n        const inputSampleRate = options.sampleRate || 48000;\n        const audioData = await arrayBufferFromBlob(audioBlob);\n        const inputPCM = await decodeAudioData(audioData, inputSampleRate);\n        const bitRate = element.bitRate || 64 * 1000; // MP3-specific default bitRate\n\n        // Until direct to MP3 encoder implemented, record as Opus first then convert as a whole.\n        return withWorker(options.workerUrl, (worker) => {\n            const CHUNK_SIZE = 8192;\n            worker.postMessage({\n                type: 'init',\n                sampleRate: inputSampleRate,\n                bitRate\n            });\n\n            // send to worker in chunks\n            let offset = 0;\n            let remain = inputPCM.length;\n            while (remain > 0) {\n                const length = remain > CHUNK_SIZE ? CHUNK_SIZE : remain;\n\n                // slice out a chunk into its own ArrayBuffer\n                const chunk = new Float32Array(length);\n                chunk.set(inputPCM.slice(offset, offset + length), 0);\n                offset += length;\n                remain -= length;\n\n                worker.postMessage({\n                    type: 'data',\n                    data: chunk.buffer,\n                }, [chunk.buffer]);\n            }\n\n            // signal end of data\n            worker.postMessage({\n                type: 'flush',\n            });\n        }).then(blob => {\n            triggerEvent(element, 'converted', { blob });\n            return blob;\n        }).catch(err => {\n            triggerEvent(element, 'error', { error: err });\n            throw err;\n        })\n    }\n\n    async _recordOpus(element, stream, options) {\n        const bitRate = element.bitRate || (32 * 1000); // Uses 32k as default bitrate for Opus podcast\n\n        // Use optional 'MediaRecorder' field of recording call options to override.\n        const mediaRecorderOptions = Object.assign({}, {\n            mimeType: 'audio/webm; codecs=\"opus\"',\n            audioBitsPerSecond: bitRate,\n        }, options.MediaRecorder);\n\n        // MediaRecorder instance had issues when reused.\n        // So each recording session creates a new instance internally.\n        const recorder = new MediaRecorder(stream, mediaRecorderOptions);\n\n        // Stop event is used to stop recording.\n        element.addEventListener('stop', ({ detail: { reason } }) => {\n            if (!recorder || recorder.state !== 'recording') {\n                return;\n            }\n            recorder.stop()\n        }, { once: true });\n\n        // Time-sliced blobs from MediaRecorders are not guaranteed to honor logical boundaries.\n        // So blobs are merged to form a proper opus packets in webm container is returned when stopped.\n        // Override optional 'timeslice' recording option to change timeslice duration (default 20ms).\n        // Note that resulting audio file's duration field is not set correctly on Chrome.\n        return new Promise((resolve, reject) => {\n            const blobs = [];\n            recorder.ondataavailable = e => {\n                if (typeof e.data !== \"undefined\" && e.data.size > 0) {\n                    blobs.push(e.data);\n                }\n            };\n            recorder.onstop = e => {\n                if (blobs.length > 0) {\n                    resolve(new Blob(blobs, { type: blobs[0].type }))\n                } else {\n                    resolve(null);\n                }\n            };\n            recorder.onerror = e => {\n                reject(e.error);\n            }\n            recorder.start(options.timeslice);\n        })\n    }\n\n    async _recordMP3(element, stream, options) {\n        const audioSettings = stream.getAudioTracks()[0].getSettings();\n        const sampleRate = audioSettings.sampleRate || 48000;\n        return withWorker(options.workerUrl, (worker) => {\n            const bitRate = element.bitRate || (64 * 1024); // MP3-specific default bitrate for podcasting\n            worker.postMessage({\n                type: 'init',\n                sampleRate,\n                bitRate\n            });\n\n            this._processStream(element, stream, (samples) => {\n                worker.postMessage({\n                    type: 'data',\n                    data: samples.buffer,\n                }, [samples.buffer]);\n            })\n\n            element.addEventListener(\"stop\", e => {\n                // signal end of data\n                worker.postMessage({\n                    type: 'flush',\n                });\n            })\n        })\n    }\n\n    async _processStream(element, stream, processor) {\n        const audioContext = new AudioContext()\n\n        const sourceNode = audioContext.createMediaStreamSource(stream);\n\n        const processorNode = audioContext.createScriptProcessor(0, 1, 1);\n        processorNode.onaudioprocess = (e) => processor(getChannelData(e.inputBuffer, 0))\n\n        sourceNode.connect(processorNode);\n        processorNode.connect(audioContext.destination);\n\n        element.addEventListener(\"stop\", e => {\n            sourceNode.disconnect();\n        })\n    }\n}\n","import { triggerEvent } from \"./utils\";\n\nexport class TalkRemoteService {\n    constructor() {\n    }\n\n    createServiceFrame(element) {\n        const { host, role } = element;\n        const iframe = document.createElement('iframe');\n        iframe.src = host;\n        iframe.name = \"talk-service\";\n        iframe.allow = \"microphone; autoplay\";\n        if (role === 'framer') {\n            iframe.width = 0;\n            iframe.height = 0;\n            iframe.style.display = 'none';\n        } else {\n            iframe.width = 500;\n            iframe.height = 500;\n            iframe.style.border = 'none';\n        }\n        return iframe;\n    }\n\n    async record(element, options) {\n        if (!element.iframePort) {\n            throw new Error('service frame to host failed to open');\n        }\n        return new Promise((resolve, reject) => {\n            element.iframePort.addEventListener('recorded', e => {\n                const msg = e.detail;\n                triggerEvent(element, msg.type, msg)\n                resolve(msg.blob);\n            }, { once: true });\n            element.iframePort.addEventListener('error', e => {\n                const msg = e.detail;\n                triggerEvent(element, msg.type, msg)\n                reject(msg.error)\n            }, { once: true });\n            element.iframePort.postMessage({\n                type: 'record',\n                options,\n            })\n            triggerEvent(element, 'record', {});\n        })\n    }\n\n    stop(element, reason) {\n        triggerEvent(element, 'stop', { reason });\n\n        if (element.iframePort) {\n            element.iframePort.postMessage({ type: 'stop' });\n        }\n    }\n\n    async convert(element, audioBlob, options = {}) {\n        if (!element.iframePort) {\n            throw new Error('service frame to host failed to open');\n        }\n\n        return new Promise((resolve, reject) => {\n            element.iframePort.addEventListener('converted', e => {\n                const msg = e.detail;\n                triggerEvent(element, msg.type, msg)\n                resolve(msg.blob);\n            }, { once: true });\n            element.iframePort.addEventListener('error', e => {\n                const msg = e.detail;\n                triggerEvent(element, msg.type, msg)\n                reject(msg.error)\n            }, { once: true });\n            element.iframePort.postMessage({\n                type: 'convert',\n                blob: audioBlob,\n                options,\n            })\n            triggerEvent(element, 'convert', {});\n        })\n    }\n}\n","/**\n * Create port to an iframe element:\n * \n *      const iframePort = new FramePort(iframeEl);\n * \n * Create port to parent window:\n * \n *      const parentPort = new FramePort(window.parent);\n * \n * Post a message:\n * \n *      port.postMessage(msg, [transferables]);\n * \n * Wait for a specific message type:\n * \n *      port.addEventListener('recorded', msg => console.log('recorded blob', msg.blob));\n * \n * Send a request and wait for response:\n * \n *      const response = await port.sendRequest(request, [transferables]);\n * \n * Send a message in response to a request:\n * \n *      if (port.isRequest(msg)) port.sendResponse(msg, response);\n * \n * Send error in response to a request:\n * \n *      if (port.isRequest(msg) && error) port.sendError(msg, error);\n * \n */\nexport class FramePort extends EventTarget {\n\n    constructor(frameOrParent) {\n        super();\n\n        if (!frameOrParent) throw new Error('null FramePort constructor argument');\n        if (frameOrParent instanceof HTMLIFrameElement) {\n            if (!frameOrParent.src) throw new Error('null iframe.src');\n            this.target = frameOrParent.contentWindow;\n            this.origin = new URL(frameOrParent.src).origin;\n        } else {\n            if (frameOrParent !== parent) throw new Error(\"wrong parent\");\n            if (frameOrParent === window) throw new Error(\"not framed\");\n            this.target = frameOrParent;\n            this.origin = new URL(document.referrer).origin;\n        }\n\n        this._reqCount = 0;\n        this._receivers = {};\n\n        this._listener = e => e.origin === this.origin && this._receiveMessage(e);\n        window.addEventListener('message', this._listener);\n    }\n\n    close() {\n        window.removeEventListener(\"message\", this._listener);\n        this.target = null;\n        this._receivers = {};\n        this._listener = null;\n    }\n\n    postMessage(msg, transfers) {\n        if (!msg) throw new Error('null msg');\n        this.target.postMessage(msg, this.origin, transfers);\n    }\n\n    sendRequest(request, transfers) {\n        return new Promise((resolve, reject) => {\n            this._registerRequest(request, (response) => response.type !== 'error' ? resolve(response) : reject(response.error));\n            this.postMessage(request, transfers);\n        });\n    }\n\n    isRequest(msg) {\n        return '_reqId' in msg;\n    }\n\n    sendResponse(request, response, transfers) {\n        this._registerResponse(request, response);\n        this.postMessage(response, transfers);\n    }\n\n    sendError(request, error) {\n        this.sendResponse(request, { type: 'error', error });\n    }\n\n    _receiveMessage(e) {\n        const msg = e.data;\n        if (!this._dispatchResponse(msg)) {\n            this.dispatchEvent(new CustomEvent(msg.type, { detail: msg }));\n        }\n    }\n\n    _registerRequest(msg, receiver) {\n        msg._reqId = ++this._reqCount;\n        this._receivers[msg._reqId] = receiver;\n    }\n\n    _registerResponse(request, response) {\n        response._resId = request._reqId;\n    }\n\n    _dispatchResponse(msg) {\n        const resId = msg._resId;\n        if (!resId || !this._receivers[resId]) {\n            return false;\n        }\n        this._receivers[resId](msg);\n        delete this._receivers[resId];\n        return true;\n    }\n}\n","import { TalkLocalService } from \"./TalkLocalService\";\nimport { TalkRemoteService } from \"./TalkRemoteService\"\nimport { FramePort } from \"./FramePort\";\nimport { friendlyFloat } from \"./utils\";\n\nexport class TalkRecorder extends HTMLElement {\n    // Lowercased names of modifiable attributes to receive attributeChangedCallback on.\n    static observedAttributes = [\"bitrate\", \"host\", \"role\"];\n\n    constructor() {\n        super();\n    }\n\n    // Callback used to notify when an attribute in `observedAttributes` list changes value.\n    // Also called before connectedCallback with each attribute's initial value.\n    // Attributes covered include custom as well as built-in attributes, like style.\n    // NOTE: attribute name will be in lowercase as specfied in the HTML spec.\n    attributeChangedCallback(name, oldValue, newValue) {\n        switch (name) {\n            case 'bitrate':\n                this.bitRate = friendlyFloat(newValue, oldValue);\n                break;\n            case 'host':\n                this.host = newValue;\n                break;\n            case 'role':\n                console.log('role', { oldValue, newValue });\n                if (typeof newValue === 'string') {\n                    this.role = newValue.trim().toLowerCase();\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    // Callback to notify custom element has been inserted into document.\n    connectedCallback() {\n        if (this.host) {\n            this.service = new TalkRemoteService();\n            this.iframe = this.service.createServiceFrame(this);\n            this.appendChild(this.iframe);\n            this.iframePort = new FramePort(this.iframe);\n        } else {\n            this.service = new TalkLocalService();\n\n            if (this.role === 'framed' && parent !== window) {\n                this.parentPort = new FramePort(parent);\n                this.parentPort.addEventListener('record', e => {\n                    const msg = e.detail;\n                    this.record(msg.options)\n                });\n                this.parentPort.addEventListener('stop', e => {\n                    const msg = e.detail;\n                    this.stop(msg.reason);\n                });\n                this.parentPort.addEventListener('convert', e => {\n                    const msg = e.detail;\n                    this.convert(msg.blob, msg.options);\n                });\n                this.addEventListener('recorded', e => {\n                    const { blob } = e.detail;\n                    this.parentPort.postMessage({ type: 'recorded', blob })\n                })\n                this.addEventListener('converted', e => {\n                    const { blob } = e.detail;\n                    this.parentPort.postMessage({ type: 'converted', blob });\n                })\n            }\n        }\n    }\n\n    // Callback to notify custom element has been removed from document.\n    disconnectedCallback() {\n    }\n\n    // Callback to notify custom element's parentNode changes\n    adoptedCallback() {\n    }\n\n    isSupported() {\n        return (\n            navigator.mediaDevices && navigator.mediaDevices.getUserMedia &&\n            window.MediaRecorder &&\n            window.Worker &&\n            window.WebAssembly\n        );\n    }\n\n    async record(options = {}) {\n        options = Object.assign({}, {\n            type: 'opus',\n        }, options);\n\n        if (options.type !== 'opus' && options.type !== 'mp3') {\n            throw new Error('unknown recording type');\n        }\n\n        return this.service.record(this, options);\n    }\n\n    async stop(reason = 'finish') {\n        return this.service.stop(this, reason);\n    }\n\n    async convert(audioBlob, options = {}) {\n        return this.service.convert(this, audioBlob, options);\n    }\n}\n","import \"regenerator-runtime/runtime\";\nexport * from \"./TalkRecorder\";\nimport { TalkRecorder } from \"./TalkRecorder\";\n\nif (typeof window !== 'undefined') {\n    window.TalkRecorder = TalkRecorder;\n    if ('customElements' in window) {\n        customElements.define(\"talk-recorder\", TalkRecorder);\n    }\n}\n"]}
